version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: filmxane_postgres
    environment:
      POSTGRES_DB: filmxane_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - filmxane_network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: filmxane_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - filmxane_network

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: filmxane_backend
    environment:
      - NODE_ENV=production
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USERNAME=postgres
      - DB_PASSWORD=password
      - DB_DATABASE=filmxane_db
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - JWT_SECRET=your-super-secret-jwt-key-here
      - JWT_EXPIRES_IN=7d
    ports:
      - "3001:3001"
    depends_on:
      - postgres
      - redis
    volumes:
      - ./uploads:/app/uploads
    networks:
      - filmxane_network

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: filmxane_frontend
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:3001/api
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - filmxane_network

  # Admin Panel
  admin:
    build:
      context: ./admin-panel
      dockerfile: Dockerfile
    container_name: filmxane_admin
    environment:
      - VITE_API_URL=http://localhost:3001/api
    ports:
      - "3002:3002"
    depends_on:
      - backend
    networks:
      - filmxane_network

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: filmxane_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - frontend
      - backend
      - admin
    networks:
      - filmxane_network

volumes:
  postgres_data:
  redis_data:

networks:
  filmxane_network:
    driver: bridge
